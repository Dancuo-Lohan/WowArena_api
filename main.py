from typing import Union
import joblib
from fastapi import FastAPI
# import sklearn
# from sklearn import ensemble
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.preprocessing import OneHotEncoder
from sklearn.metrics import accuracy_score, average_precision_score

app = FastAPI()

@app.get("/predict")
def read_root(data=""):
    print(data)
    
    # myIA.predict
    return{"Result": "Prediction"}


@app.get("/game")
def predict_game():
    print("truc")
    model = joblib.load("./trained_model.pkl")
    print("deuxieme")
    columns = ['pandaren_warrior_A', 'pandaren_warrior_B', 'pandaren_hunter_A', 'pandaren_hunter_B', 'pandaren_rogue_A', 'pandaren_rogue_B', 'pandaren_warlock_A', 'pandaren_warlock_B', 'pandaren_druid_A', 'pandaren_druid_B', 'pandaren_mage_A', 'pandaren_mage_B', 'pandaren_shaman_A', 'pandaren_shaman_B', 'pandaren_priest_A', 'pandaren_priest_B', 'pandaren_monk_A', 'pandaren_monk_B', 'pandaren_death knight_A', 'pandaren_death knight_B', 'pandaren_paladin_A', 'pandaren_paladin_B', 'orc_warrior_A', 'orc_warrior_B', 'orc_hunter_A', 'orc_hunter_B', 'orc_rogue_A', 'orc_rogue_B', 'orc_warlock_A', 'orc_warlock_B', 'orc_druid_A', 'orc_druid_B', 'orc_mage_A', 'orc_mage_B', 'orc_shaman_A', 'orc_shaman_B', 'orc_priest_A', 'orc_priest_B', 'orc_monk_A', 'orc_monk_B', 'orc_death knight_A', 'orc_death knight_B', 'orc_paladin_A', 'orc_paladin_B', 'human_warrior_A', 'human_warrior_B', 'human_hunter_A', 'human_hunter_B', 'human_rogue_A', 'human_rogue_B', 'human_warlock_A', 'human_warlock_B', 'human_druid_A', 'human_druid_B', 'human_mage_A', 'human_mage_B', 'human_shaman_A', 'human_shaman_B', 'human_priest_A', 'human_priest_B', 'human_monk_A', 'human_monk_B', 'human_death knight_A', 'human_death knight_B', 'human_paladin_A', 'human_paladin_B', 'gnome_warrior_A', 'gnome_warrior_B', 'gnome_hunter_A', 'gnome_hunter_B', 'gnome_rogue_A', 'gnome_rogue_B', 'gnome_warlock_A', 'gnome_warlock_B', 'gnome_druid_A', 'gnome_druid_B', 'gnome_mage_A', 'gnome_mage_B', 'gnome_shaman_A', 'gnome_shaman_B', 'gnome_priest_A', 'gnome_priest_B', 'gnome_monk_A', 'gnome_monk_B', 'gnome_death knight_A', 'gnome_death knight_B', 'gnome_paladin_A', 'gnome_paladin_B', 'night elf_warrior_A', 'night elf_warrior_B', 'night elf_hunter_A', 'night elf_hunter_B', 'night elf_rogue_A', 'night elf_rogue_B', 'night elf_warlock_A', 'night elf_warlock_B', 'night elf_druid_A', 'night elf_druid_B', 'night elf_mage_A', 'night elf_mage_B', 'night elf_shaman_A', 'night elf_shaman_B', 'night elf_priest_A', 'night elf_priest_B', 'night elf_monk_A', 'night elf_monk_B', 'night elf_death knight_A', 'night elf_death knight_B', 'night elf_paladin_A', 'night elf_paladin_B', 'worgen_warrior_A', 'worgen_warrior_B', 'worgen_hunter_A', 'worgen_hunter_B', 'worgen_rogue_A', 'worgen_rogue_B', 'worgen_warlock_A', 'worgen_warlock_B', 'worgen_druid_A', 'worgen_druid_B', 'worgen_mage_A', 'worgen_mage_B', 'worgen_shaman_A', 'worgen_shaman_B', 'worgen_priest_A', 'worgen_priest_B', 'worgen_monk_A', 'worgen_monk_B', 'worgen_death knight_A', 'worgen_death knight_B', 'worgen_paladin_A', 'worgen_paladin_B', 'troll_warrior_A', 'troll_warrior_B', 'troll_hunter_A', 'troll_hunter_B', 'troll_rogue_A', 'troll_rogue_B', 'troll_warlock_A', 'troll_warlock_B', 'troll_druid_A', 'troll_druid_B', 'troll_mage_A', 'troll_mage_B', 'troll_shaman_A', 'troll_shaman_B', 'troll_priest_A', 'troll_priest_B', 'troll_monk_A', 'troll_monk_B', 'troll_death knight_A', 'troll_death knight_B', 'troll_paladin_A', 'troll_paladin_B', 'blood elf_warrior_A', 'blood elf_warrior_B', 'blood elf_hunter_A', 'blood elf_hunter_B', 'blood elf_rogue_A', 'blood elf_rogue_B', 'blood elf_warlock_A', 'blood elf_warlock_B', 'blood elf_druid_A', 'blood elf_druid_B', 'blood elf_mage_A', 'blood elf_mage_B', 'blood elf_shaman_A', 'blood elf_shaman_B', 'blood elf_priest_A', 'blood elf_priest_B', 'blood elf_monk_A', 'blood elf_monk_B', 'blood elf_death knight_A', 'blood elf_death knight_B', 'blood elf_paladin_A', 'blood elf_paladin_B', 'undead_warrior_A', 'undead_warrior_B', 'undead_hunter_A', 'undead_hunter_B', 'undead_rogue_A', 'undead_rogue_B', 'undead_warlock_A', 'undead_warlock_B', 'undead_druid_A', 'undead_druid_B', 'undead_mage_A', 'undead_mage_B', 'undead_shaman_A', 'undead_shaman_B', 'undead_priest_A', 'undead_priest_B', 'undead_monk_A', 'undead_monk_B', 'undead_death knight_A', 'undead_death knight_B', 'undead_paladin_A', 'undead_paladin_B', 'tauren_warrior_A', 'tauren_warrior_B', 'tauren_hunter_A', 'tauren_hunter_B', 'tauren_rogue_A', 'tauren_rogue_B', 'tauren_warlock_A', 'tauren_warlock_B', 'tauren_druid_A', 'tauren_druid_B', 'tauren_mage_A', 'tauren_mage_B', 'tauren_shaman_A', 'tauren_shaman_B', 'tauren_priest_A', 'tauren_priest_B', 'tauren_monk_A', 'tauren_monk_B', 'tauren_death knight_A', 'tauren_death knight_B', 'tauren_paladin_A', 'tauren_paladin_B', 'draenei_warrior_A', 'draenei_warrior_B', 'draenei_hunter_A', 'draenei_hunter_B', 'draenei_rogue_A', 'draenei_rogue_B', 'draenei_warlock_A', 'draenei_warlock_B', 'draenei_druid_A', 'draenei_druid_B', 'draenei_mage_A', 'draenei_mage_B', 'draenei_shaman_A', 'draenei_shaman_B', 'draenei_priest_A', 'draenei_priest_B', 'draenei_monk_A', 'draenei_monk_B', 'draenei_death knight_A', 'draenei_death knight_B', 'draenei_paladin_A', 'draenei_paladin_B', 'goblin_warrior_A', 'goblin_warrior_B', 'goblin_hunter_A', 'goblin_hunter_B', 'goblin_rogue_A', 'goblin_rogue_B', 'goblin_warlock_A', 'goblin_warlock_B', 'goblin_druid_A', 'goblin_druid_B', 'goblin_mage_A', 'goblin_mage_B', 'goblin_shaman_A', 'goblin_shaman_B', 'goblin_priest_A', 'goblin_priest_B', 'goblin_monk_A', 'goblin_monk_B', 'goblin_death knight_A', 'goblin_death knight_B', 'goblin_paladin_A', 'goblin_paladin_B', 'dwarf_warrior_A', 'dwarf_warrior_B', 'dwarf_hunter_A', 'dwarf_hunter_B', 'dwarf_rogue_A', 'dwarf_rogue_B', 'dwarf_warlock_A', 'dwarf_warlock_B', 'dwarf_druid_A', 'dwarf_druid_B', 'dwarf_mage_A', 'dwarf_mage_B', 'dwarf_shaman_A', 'dwarf_shaman_B', 'dwarf_priest_A', 'dwarf_priest_B', 'dwarf_monk_A', 'dwarf_monk_B', 'dwarf_death knight_A', 'dwarf_death knight_B', 'dwarf_paladin_A', 'dwarf_paladin_B', '2v2', '3v3', '5v5', 'bg', 'Alterac Valley', 'Arathi Basin', "Blade's Edge Arena", 'Dalaran Sewers', 'Deepwind Gorge', 'Eye of the Storm', 'Isle of Conquest', 'Nagrand Arena', 'Ruins of Lordaeron', 'Silvershard Mines', 'Strand of the Ancients', 'Temple of Kotmogu', 'The Battle for Gilneas', "The Tiger's Peak", "Tol'Viron Arena", 'Twin Peaks', 'Warsong Gulch']
    empty_game = {key: 0 for key in columns}
    print(model)
    prediction = model.predict([[empty_game[key] for key in empty_game]])
    print(prediction)
    return {"prediction" : str(prediction)}